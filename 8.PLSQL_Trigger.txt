SQL> SET SERVEROUTPUT ON;
SQL> SET VERIFY ON;
SQL> CREATE TABLE lib_tab(book_name VARCHAR2(25),status VARCHAR2(15));

Table created.

SQL> CREATE TABLE library_audit(date_modified DATE, book_name VARCHAR2(25),old_status VARCHAR(15),new_status VARCHAR2(15),action VARCHAR2(25));

Table created.

SQL> INSERT INTO lib_tab VALUES('DARK MATTER','AVAILABLE');

1 row created.

SQL> INSERT INTO lib_tab VALUES('SILENT HILL','UNAVAILABLE');

1 row created.

SQL> INSERT INTO lib_tab VALUES('GOD OF WAR','AVAILABLE');

1 row created.

SQL> INSERT INTO lib_tab VALUES('SPIDER-MAN','UNAVAILABLE');

1 row created.

SQL> INSERT INTO lib_tab VALUES('UNCHARTED','AVAILABLE');

1 row created.

SQL> select * from lib_tab;

BOOK_NAME                 STATUS
------------------------- ---------------
DARK MATTER               AVAILABLE
SILENT HILL               UNAVAILABLE
GOD OF WAR                AVAILABLE
SPIDER-MAN                UNAVAILABLE
UNCHARTED                 AVAILABLE

SQL> CREATE OR REPLACE TRIGGER trigger_1
  2  AFTER UPDATE OR DELETE OR INSERT ON lib_tab FOR EACH ROW
  3  ENABLE
  4  BEGIN
  5  IF UPDATING THEN
  6  dbms_output.put_line(:OLD.status);
  7  INSERT INTO library_audit VALUES (SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'UPDATE');
  8  ELSIF INSERTING THEN
  9   dbms_output.put_line(:NEW.status);
 10  INSERT INTO library_audit VALUES (SYSDATE,:NEW.book_name,:OLD.status,:NEW.status,'INSERT');
 11  ELSE
 12  dbms_output.put_line(:OLD.book_name||'deleting');
 13  INSERT INTO library_audit VALUES(SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'DELETE');
 14  END IF;
 15  END;
 16  /

Trigger created.

SQL> DELETE FROM lib_tab WHERE book_name = 'SILENT HILL';
SILENT HILLdeleting

1 row deleted.

SQL> UPDATE lib_tab SET status = 'UNAVAILABLE' WHERE book_name =  'UNCHARTED';
AVAILABLE

1 row updated.

SQL> UPDATE lib_tab SET status = 'PRE-ORDER' WHERE book_name = 'GOD OF WAR';
AVAILABLE

1 row updated.

SQL> UPDATE lib_tab SET status = 'AVAILABLE' WHERE book_name = 'UNCHARTED';
UNAVAILABLE

1 row updated.

SQL> SP2-0042: unknown command "U" - rest of line ignored.
SQL> INSERT INTO lib_tab VALUES('SPM','UNAVAILABLE');
UNAVAILABLE

1 row created.

SQL> Select * from library_audit;

DATE_MODI BOOK_NAME                 OLD_STATUS      NEW_STATUS
--------- ------------------------- --------------- ---------------
ACTION
-------------------------
23-SEP-24 SILENT HILL               UNAVAILABLE
DELETE

23-SEP-24 UNCHARTED                 AVAILABLE       UNAVAILABLE
UPDATE

23-SEP-24 GOD OF WAR                AVAILABLE       PRE-ORDER
UPDATE


DATE_MODI BOOK_NAME                 OLD_STATUS      NEW_STATUS
--------- ------------------------- --------------- ---------------
ACTION
-------------------------
23-SEP-24 UNCHARTED                 UNAVAILABLE     AVAILABLE
UPDATE

23-SEP-24 SPM                                       UNAVAILABLE
INSERT


SQL> Select * from lib_tab;

BOOK_NAME                 STATUS
------------------------- ---------------
DARK MATTER               AVAILABLE
GOD OF WAR                PRE-ORDER
SPIDER-MAN                UNAVAILABLE
UNCHARTED                 AVAILABLE
SPM                       UNAVAILABLE
dbms8.txt
Displaying dbms8.txt.